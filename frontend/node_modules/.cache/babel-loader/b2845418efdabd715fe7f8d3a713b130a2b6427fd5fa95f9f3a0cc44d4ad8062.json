{"ast":null,"code":"var _jsxFileName = \"/home/lcom/Documents/aarti_041/react/auhentication_authorization/01-starting-project/frontend/src/pages/Authentication.js\";\nimport { json } from \"react-router-dom\";\nimport AuthForm from \"../components/AuthForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthenticationPage() {\n  return /*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n}\n_c = AuthenticationPage;\nexport async function action({\n  request\n}) {\n  const searchParams = new URL(request.url).searchParams;\n  const mode = searchParams.get(\"mode\") || \"login\";\n  const data = await request.formData();\n  if (mode !== \"login\" && mode !== \"signup\") {\n    throw json({\n      message: \"unsupported mode.\"\n    }, {\n      status: 422\n    });\n  }\n  const authData = {\n    email: data.get(\"email\"),\n    password: data.get(\"password\")\n  };\n  const response = await fetch(\"http://localhost:8080/\" + mode, {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\"\n    },\n    body: JSON.stringify(authData)\n  });\n  if (response.status == 422 || response.status == 401) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json({\n      message: \"Could not authenticate user.\"\n    }, stat);\n  }\n}\nexport default AuthenticationPage;\nvar _c;\n$RefreshReg$(_c, \"AuthenticationPage\");","map":{"version":3,"names":["json","AuthForm","jsxDEV","_jsxDEV","AuthenticationPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","searchParams","URL","url","mode","get","data","formData","message","status","authData","email","password","response","fetch","method","headers","body","JSON","stringify","ok","stat","$RefreshReg$"],"sources":["/home/lcom/Documents/aarti_041/react/auhentication_authorization/01-starting-project/frontend/src/pages/Authentication.js"],"sourcesContent":["import { json } from \"react-router-dom\";\nimport AuthForm from \"../components/AuthForm\";\n\nfunction AuthenticationPage() {\n  return <AuthForm />;\n}\nexport async function action({ request }) {\n  const searchParams = new URL(request.url).searchParams;\n  const mode = searchParams.get(\"mode\") || \"login\";\n  const data = await request.formData();\n  if (mode !== \"login\" && mode !== \"signup\") {\n    throw json({ message: \"unsupported mode.\" }, { status: 422 });\n  }\n  const authData = { email: data.get(\"email\"), password: data.get(\"password\") };\n  const response = await fetch(\"http://localhost:8080/\" + mode, {\n    method: \"POST\",\n    headers: { \"Content-type\": \"application/json\" },\n    body: JSON.stringify(authData),\n  });\n  if (response.status == 422 || response.status == 401) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json({ message: \"Could not authenticate user.\" }, stat);\n  }\n}\nexport default AuthenticationPage;\n"],"mappings":";AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,kBAAkBA,CAAA,EAAG;EAC5B,oBAAOD,OAAA,CAACF,QAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrB;AAACC,EAAA,GAFQL,kBAAkB;AAG3B,OAAO,eAAeM,MAAMA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EACxC,MAAMC,YAAY,GAAG,IAAIC,GAAG,CAACF,OAAO,CAACG,GAAG,CAAC,CAACF,YAAY;EACtD,MAAMG,IAAI,GAAGH,YAAY,CAACI,GAAG,CAAC,MAAM,CAAC,IAAI,OAAO;EAChD,MAAMC,IAAI,GAAG,MAAMN,OAAO,CAACO,QAAQ,CAAC,CAAC;EACrC,IAAIH,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,QAAQ,EAAE;IACzC,MAAMf,IAAI,CAAC;MAAEmB,OAAO,EAAE;IAAoB,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EAC/D;EACA,MAAMC,QAAQ,GAAG;IAAEC,KAAK,EAAEL,IAAI,CAACD,GAAG,CAAC,OAAO,CAAC;IAAEO,QAAQ,EAAEN,IAAI,CAACD,GAAG,CAAC,UAAU;EAAE,CAAC;EAC7E,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,GAAGV,IAAI,EAAE;IAC5DW,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,QAAQ;EAC/B,CAAC,CAAC;EACF,IAAIG,QAAQ,CAACJ,MAAM,IAAI,GAAG,IAAII,QAAQ,CAACJ,MAAM,IAAI,GAAG,EAAE;IACpD,OAAOI,QAAQ;EACjB;EACA,IAAI,CAACA,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAM/B,IAAI,CAAC;MAAEmB,OAAO,EAAE;IAA+B,CAAC,EAAEa,IAAI,CAAC;EAC/D;AACF;AACA,eAAe5B,kBAAkB;AAAC,IAAAK,EAAA;AAAAwB,YAAA,CAAAxB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}